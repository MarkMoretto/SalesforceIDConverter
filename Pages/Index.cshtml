@page
@model SalesforceIDConverter.Pages.IndexModel
@{
    ViewData["Title"] = "Home";
    var txtPageHeader = "Convert an ID!";
}

<div class="page-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center">
    <h1 class="display-4">@(txtPageHeader)</h1>
</div>


<!--<div id="input-section" class="mb-2 justify-content-center">-->
<div id="input-section" class="d-grid col-3 mx-auto gap-1 mb-3">
    <div>
        <label for="sfid-input" class="form-label">Salesforce ID</label>
        <input type="text" class="form-control" id="id-input" name="sfid-input">
    </div>
    <br />
    <div>
        <label for="sfid-out" class="form-label">Result</label>
        <input type="text" class="form-control" id="id-output" name="sfid-out" disabled="true" value="" />
    </div>
    <span id="sample-output"></span>
</div>


<div class="d-grid gap-2 col-2 mx-auto">
    <input type="button" class="btn btn-submit" value="Submit" onclick="convertSFID(); return false;" />
    <input type="button" class="btn btn-cancel" value="Clear" onclick="clearInputs(); return false;"/>
</div>

<script src="~/js/converter.js" asp-append-version="true"></script>
<script>
    // Page constants.
    const inputEl = document.querySelector("#id-input");
    const outputEl = document.querySelector("#sample-output");
    const inputSection = document.querySelector("div#input-section");

    // Clear inputs on form.
    function clearInputs() {
        inputSection.querySelectorAll("input").forEach( g => g.value = null );
        inputEl.focus();
    }


    function convertSFID() {
        let newID = IdConverter(inputEl.value);
        document.querySelector("#id-output").value = newID;
    }

    /**
    * Set code list when DOM content completes loading.
    */
    window.addEventListener("DOMContentLoaded", () => {
        inputEl.focus();
    });    
 

</script>
